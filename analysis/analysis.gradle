apply plugin: 'checkstyle'
apply plugin: 'pmd'

check.dependsOn('checkstyle', 'pmd', 'lint')

task checkstyle(type: Checkstyle) {
  configFile file("${project.rootDir}/analysis/checkstyle/checkstyle.xml")
  configProperties.checkstyleSuppressionsPath =
      file("${project.rootDir}/analysis/checkstyle/suppressions.xml").absolutePath
  source 'src'
  include '**/*.java'
  exclude '**/gen/**', '**/mobileDebug/**'
  classpath = files()
}

task pmd(type: Pmd) {
  ignoreFailures = false
  ruleSetFiles = files("${project.rootDir}/analysis/pmd/pmd-ruleset.xml")
  ruleSets = []

  source 'src'
  include '**/*.java'
  exclude '**/gen/**'

  reports {
    xml.enabled = false
    html.enabled = true
    xml {
      destination file("$project.buildDir/reports/pmd/pmd.xml")
    }
    html {
      destination file("$project.buildDir/reports/pmd/pmd.html")
    }
  }
}

task installGitHook(type: Copy) {
  from new File(project.rootDir, 'analysis/git-hooks/pre-push')
  into { (new File(project.rootDir, '.git/hooks')) }
}

task uninstallGitHook(type: Delete) {
  delete "${rootProject.rootDir}/.git/hooks/pre-push"
}

android {
  lintOptions {
    quiet true
    abortOnError true
    lintConfig file("${project.rootDir}/analysis/lint/lint.xml")
    htmlOutput file("$project.buildDir/reports/lint/lint-reports.html")
    xmlOutput file("$project.buildDir/reports/lint/lint-reports.xml")
  }
}
