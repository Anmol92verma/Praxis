// Manifest version information!
def versionMajor = 0
def versionMinor = 0
def versionPatch = 1
def versionBuild = 0

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: '../analysis/analysis.gradle'
apply from: 'variants.gradle'

def preDexEnabled = "true" == System.getProperty("pre-dex", "true")
// ToDo Update project name
def projectName = "praxis-mvvm-kotlin"

android {
  compileSdkVersion versions.compileSdkVersion
  buildToolsVersion versions.buildToolVersion

  defaultConfig {
    applicationId "com.mutualmobile.praxis"

    minSdkVersion versions.minSdkVersion
    targetSdkVersion versions.targetSdkVersion

    versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    vectorDrawables.useSupportLibrary = true
  }

  packagingOptions {
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'LICENSE.txt'
  }

  dexOptions {
    preDexLibraries = preDexEnabled
  }

  androidExtensions {
    experimental = true
  }

  dataBinding {
    enabled = true
  }

  lintOptions {
    lintConfig file('../analysis/lint/lint.xml')
    htmlOutput file("$project.buildDir/reports/lint/lint-reports.html")
    xmlOutput file("$project.buildDir/reports/lint/lint-reports.xml")
    abortOnError false
  }
}

// Required for annotation processing plugins like Dagger
kapt {
  generateStubs = true
}

dependencies {

  // Kotlin
  implementation deps.kotlin.kotlinSDK

  // Android Support Libs
  implementation deps.android.support.supportv4
  implementation deps.android.support.appcompatv7
  implementation deps.android.support.design
  implementation deps.android.support.constraintLayout

  // Dagger 2
  implementation deps.dagger.dagger
  implementation deps.dagger.daggerSupport
  kapt deps.dagger.daggerCompiler
  kapt deps.dagger.daggerProcessor

  // Retrofit 2
  implementation deps.network.retrofit
  implementation deps.network.retrofitgson
  implementation deps.network.retrofitrx
  implementation deps.network.okhttplogger

  // Rx
  implementation deps.rx.java2
  implementation deps.rx.android2

  // Rx Plugins
  implementation deps.rx.permissions

  // Timber
  implementation deps.logger.timber

  implementation deps.android.arch.extentions
  implementation deps.android.arch.viewModel
  implementation deps.android.arch.liveData
  implementation deps.android.arch.reactiveStreams
  kapt deps.android.arch.compiler

  // UI Testing
  androidTestImplementation(deps.test.espressocore, {
    exclude group: 'com.android.support', module: 'support-annotations'
  })

  // Unit Testing
  testImplementation deps.test.junit
}

